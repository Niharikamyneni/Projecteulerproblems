problem 5:

package com.training;
class Palindrome {
	
	 static boolean palindrome(int N)
	 {
		 int temp=0,backup=N;
		 while(N>0)
		 {
			 temp=temp*10+N%10;
			 N = (int)Math.floor(N/10);
			 
		 }
		 if(temp==backup)
			 return true;
		 return false;
		 
	 }
	 static int largest_palindrome()
	 {
		 int largest=0;
		 for(int i=100;i<=999;i++)
		 {
			 for(int j=100;j<999;j++)
			 {
				 int N=i*j;
				 if(palindrome(N) &&  N>largest)
					 largest=N;
			 }
		 }
		 return largest;
	 }
	public static void main(String[] args) {
		int answer = largest_palindrome();
		System.out.println(answer);

	}

}

============================================================================================
problem 6:

package com.training;
public class Divisibility {
    static long gcd(long a,long b)
	{
		if(a%b!=0)
			return gcd(b,a%b);
		else
			return b;
	}
	
	static long lcm(long n)
	{
		long ans=1;
		for(long i=1;i<=n;i++)
			ans=((ans*i)/(gcd(ans,i)));
			return ans;
		}
      public static void main(String[] args)
      {
    	  long n=20;
    	  System.out.println(lcm(n));
      }
}
